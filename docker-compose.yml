version: '1.0'


services:

  mongodb:
    image: mongo:latest
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin@123

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8091:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root@123
      ME_CONFIG_MONGODB_SERVER: mongodb

  redis:
    image: redis:latest
    container_name: redis_ms
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_db:/root/redis
      - redis_conf:/usr/local/etc/redis/redis.conf
#    environment:
#      - REDIS_PASSWORD: "admin@123"
#      - REDIS_PORT: 6379
#      - REDIS_DATABASES: 16

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net


networks:
  microservices-net:
    driver: bridge

volumes:
  mongo_data:
  redis_db:
  redis_conf:


